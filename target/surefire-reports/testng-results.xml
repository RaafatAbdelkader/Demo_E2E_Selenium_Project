<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="4" passed="4" failed="0" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2022-07-30T19:49:31 EET" name="All Test Suite" finished-at="2022-07-30T19:50:08 EET" duration-ms="37513">
    <groups>
      <group name="Smoke">
        <method signature="LoginFeature.createAccount()[pri:0, instance:automationPracticeTest.UI.LoginFeature@43effd89]" name="createAccount" class="automationPracticeTest.UI.LoginFeature"/>
        <method signature="LoginFeature.loginWithRegisteredData()[pri:0, instance:automationPracticeTest.UI.LoginFeature@43effd89]" name="loginWithRegisteredData" class="automationPracticeTest.UI.LoginFeature"/>
      </group> <!-- Smoke -->
    </groups>
    <test started-at="2022-07-30T19:49:31 EET" name="Regression" finished-at="2022-07-30T19:50:08 EET" duration-ms="37513">
      <class name="automationPracticeTest.UI.LoginFeature">
        <test-method is-config="true" signature="before()[pri:0, instance:automationPracticeTest.UI.LoginFeature@43effd89]" started-at="2022-07-30T19:49:31 EET" name="before" finished-at="2022-07-30T19:49:36 EET" duration-ms="5440" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method signature="accountCreationUsingInvalidPersonalData()[pri:0, instance:automationPracticeTest.UI.LoginFeature@43effd89]" started-at="2022-07-30T19:49:36 EET" name="accountCreationUsingInvalidPersonalData" description="As an user I should not be able to create an account using invalid PersonalData" finished-at="2022-07-30T19:49:36 EET" duration-ms="17" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- accountCreationUsingInvalidPersonalData -->
        <test-method signature="createAccount()[pri:0, instance:automationPracticeTest.UI.LoginFeature@43effd89]" started-at="2022-07-30T19:49:36 EET" name="createAccount" description="As an user I should be able to create an account using valid data" finished-at="2022-07-30T19:49:50 EET" duration-ms="13439" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createAccount -->
        <test-method signature="accountCreationUsingRegisteredEmail()[pri:0, instance:automationPracticeTest.UI.LoginFeature@43effd89]" started-at="2022-07-30T19:49:50 EET" name="accountCreationUsingRegisteredEmail" description="An user should not be able to create an account using an email already registered before" finished-at="2022-07-30T19:50:01 EET" depends-on-methods="automationPracticeTest.UI.LoginFeature.createAccount" duration-ms="11567" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- accountCreationUsingRegisteredEmail -->
        <test-method signature="loginWithRegisteredData()[pri:0, instance:automationPracticeTest.UI.LoginFeature@43effd89]" started-at="2022-07-30T19:50:01 EET" name="loginWithRegisteredData" description="The user is able to log in with Login data created" finished-at="2022-07-30T19:50:07 EET" depends-on-methods="automationPracticeTest.UI.LoginFeature.createAccount" duration-ms="6124" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginWithRegisteredData -->
        <test-method is-config="true" signature="postConditions()[pri:0, instance:automationPracticeTest.UI.LoginFeature@43effd89]" started-at="2022-07-30T19:50:07 EET" name="postConditions" finished-at="2022-07-30T19:50:08 EET" duration-ms="888" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- postConditions -->
      </class> <!-- automationPracticeTest.UI.LoginFeature -->
    </test> <!-- Regression -->
  </suite> <!-- All Test Suite -->
</testng-results>
